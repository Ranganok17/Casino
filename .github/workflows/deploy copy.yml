name: Deploy Infra and App

permissions:
  id-token: write    # allow requesting the OIDC JWT token
  contents: read     # allow reading the repo (for actions/checkout)

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev or prod)'
        required: true
        default: 'dev'
        type: string

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.5.7'
          
      - name: Upgrade AWS CLI to latest version
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version
          
      - name: Configure AWS Credentials
        # Assuming different roles can be chosen by the environment
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ github.event.inputs.environment == 'prod' && secrets.AWS_OIDC_ROLE_ARN_PROD || secrets.AWS_OIDC_ROLE_ARN_DEV }}
          aws-region: eu-central-1

      - name: Terraform Init
        run: terraform -chdir=terraform/${{ env.ENVIRONMENT }} init -upgrade
          
      - name: Terraform Plan
        run: terraform -chdir=terraform/${{ env.ENVIRONMENT }} plan
          
      - name: Terraform Apply
        run: terraform -chdir=terraform/${{ env.ENVIRONMENT }} apply -auto-approve

  deploy_k8s:
    runs-on: ubuntu-latest
    needs: terraform
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ github.event.inputs.environment == 'prod' && secrets.AWS_OIDC_ROLE_ARN_PROD || secrets.AWS_OIDC_ROLE_ARN_DEV }}
          aws-region: eu-central-1

      - name: Create Namespace (casino) if not exists
        run: |
          kubectl create namespace casino --dry-run=client -o yaml | kubectl apply -f -

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name radu-casino-dev --region eu-central-1 --namespace casino

      - name: Install Helm Chart into Namespace
        run: |
          helm upgrade --install hello-world helm/hello-world \
            -f helm/hello-world/values-${{ env.ENVIRONMENT }}.yaml \
            --namespace casino

      - name: Debug - Show Current Namespace in kubeconfig
        run: kubectl config view --minify | grep namespace

      - name: Verify Kubernetes Connection
        run: kubectl get pods --namespace casino

      - name: Deploy Additional Kubernetes Manifests (if needed)
        run: kubectl apply -f k8s/ --recursive --namespace casino
